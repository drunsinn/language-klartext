scopeName : 'source.g-code.siemens';
name: 'G-Code - Siemens'
fileTypes: [
  'mpf', # sinumerik main program
  'spf', # sinumerik sub programm
]

patterns: [
    {
      comment: 'program name'
      match: '(%)([\\w\\d_]+MPF)?'
      captures:
        1:
          name: 'keyword.control.g-code'
        2:
          name: 'variable.string.g-code'
    },
    {
      comment: 'line number'
      match: '^N\\s*\\d+'
      name: 'comment.line.g-code'
    },
    {
      comment: 'function block'
      name: 'keyword.control.g-code'
      contentName: 'keyword.operator.g-code'
      begin: '((?:POCKET\\d)|(?:HOLES\\d)|(?:CYCLE\\d+))\\('
      end: '\\)'
      patterns: [
        {
          match: '(([\\+-]?\\d+(?:\\.\\d)?)?)(\\,)?'
          captures:
            1:
              name: 'constant.numeric.g-code'
        },
      ]
    },
    {
      comment: 'function block'
      name: 'keyword.control.g-code'
      contentName: 'keyword.operator.g-code';
      begin: '((?:WRITE)|(?:DELETE)|(?:MSG))\\('
      end: '\\)'
      patterns: [
        {include: '$self'},
      ]
    },
    {
      comment: 'comment until the end of the line'
      match: ';(.*)$'
      name: 'comment.line.g-code'
    },
    {
      comment: 'string in double quotes'
      match: '"[\\w\\s#-]*"'
      name: 'variable.string.g-code'
    },
    {
      comment: 'G-Command'
      match: '\\b(G)(\\d+)\\b'
      captures:
        1:
          name: 'keyword.control.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'Machine Function'
      match: '\\b(M)(\\d+)\\b'
      captures:
        1:
          name: 'keyword.control.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'Tool call'
      match: '\\b(T)(\\d+)\\b'
      captures:
        1:
          name: 'keyword.control.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'axis values'
      match: '\\b([ABCIJKXYZ])([\\+-]?\\d+(?:\\.\\d+)?)\\b'
      captures:
        1:
          name: 'keyword.operator.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'Spindle speed'
      match: '\\b(S)(\\d+)\\b'
      captures:
        1:
          name: 'keyword.operator.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'feed rate'
      match: '\\b(F)(\\d+(?:\\.\\d+)?)\\b'
      captures:
        1:
          name: 'keyword.operator.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'Keywords: Flow control - If'
      match: '\\b((?:IF)|(?:OR)|(?:AND)|(?:ELSE)|(?:ENDIF))\\b'
      name: 'keyword.control.g-code'
    },
    {
      comment: 'Keywords: Flow control - Loop'
      match: '\\b((?:WHILE)|(?:ENDWHILE)|(?:FOR)|(?:TO)|(?:ENDFOR))\\b'
      name: 'keyword.control.g-code'
    },
    {
      comment: 'Keywords: Variable Definition'
      match: '\\b(DEF (?:(?:INT)|(?:REAL)|(?:BOOL)|(?:CHAR)|(?:STRING)))\\b'
      name: 'keyword.control.g-code'
    },
    {
      comment: 'System or User Variable - Array'
      match: '(?<!\\w)([_\\$]{1}[A-Z_]+\\[)([_0-9A-Z ]+)(\\])'
      captures:
        1:
          name: 'keyword.variable.g-code'
        2:
          name: 'constant.numeric.g-code'
        3:
          name: 'keyword.variable.g-code'
    },
    {
      comment: 'System or User Variable'
      match: '([_\\$]{1}[A-Z_]+)'
      name: 'keyword.variable.g-code'
    },
]
