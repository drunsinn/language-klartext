scopeName : 'source.g-code.cncpilot';
name: 'G-Code - CNCpilot';
fileTypes: [
  'ncs',
  'nc',
]

foldingStartMarker: 'UNIT';
foldingStopMarker: 'END_OF_UNIT';
firstLineMatch: '"TURN_V1\\.0"$';
limitLineLength: true;

patterns: [
    {
      comment: 'line number'
      match: '^N\\s*\\d+'
      name: 'comment.line.g-code'
    },
    {
      comment: 'unit block'
      name: 'keyword.control.g-code'
      contentName: 'keyword.operator.g-code';
      begin: '\\[<unit'
      end: '/>\\]'
    },
    {
      comment: 'comment block in square brackets'
      match: '\\[.*?\\]'
      name: 'comment.block.g-code'
    },
    {
      comment: 'string in double quouts'
      match: '"[\\w\\s#]*"'
      name: 'variable.string.g-code'
    },
    {
        comment: 'program meta info'
        match: '^#(.*)$'
        name: 'comment.block.g-code'
    },
    {
        comment: 'program name'
        match: '(%)([\\w\\d_]+\\.[ncsNCS]+)(\\s+".*")?'
        captures:
            1:
                name: 'keyword.control.g-code'
            2:
                name: 'variable.string.g-code'
            3:
                name: 'constant.string.g-code'
    },
    {
      comment: 'G-Command'
      match: '\\b(G)(\\d+)\\b'
      captures:
        1:
          name: 'keyword.control.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'Machine Function'
      match: '\\b(M)(\\d+)\\b'
      captures:
        1:
          name: 'keyword.control.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'Tool call'
      match: '\\b(T)(\\d+)\\b'
      captures:
        1:
          name: 'keyword.control.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'axis values'
      match: '\\b([XYZ])([\\+-]?\\d+(?:\\.\\d+)?)\\b'
      captures:
        1:
          name: 'keyword.operator.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'Spindle speed'
      match: '\\b(S)(\\d+)\\b'
      captures:
        1:
          name: 'keyword.operator.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'feed rate'
      match: '\\b(F)(\\d+(?:\\.\\d+)?)\\b'
      captures:
        1:
          name: 'keyword.operator.g-code'
        2:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'Keyword: Unit start'
      match: '\\b(UNIT ID)'
      name: 'keyword.control.g-code'
    },
    {
      comment: 'Keyword: Unit end'
      match: '\\b(END_OF_UNIT) (S)(\\d+)'
      captures:
        1:
          name: 'keyword.control.g-code'
        2:
          name: 'keyword.operator.g-code'
        3:
          name: 'constant.numeric.g-code'
    },
    {
      comment: 'Keywords: Groups German'
      match: '\\b((?:PROGRAMMKOPF)|(?:REVOLVER)|(?:ROHTEIL)|(?:FERTIGTEIL)|(?:BEARBEITUNG))\\b'
      name: 'keyword.control.g-code'
    },
    {
      comment: 'Keywords: Groups English'
      match: '\\b((?:CONST)|(?:VAR)|(?:MACHINING))\\b'
      name: 'keyword.control.g-code'
    },
    {
      comment: 'Keywords: GLOBAL'
      match: '\\b((?:ENDE)|(?:RETURN))\\b'
      name: 'keyword.control.g-code'
    },
    {
      comment: 'Keywords: Flow control - Part1'
      match: '\\b((?:IF)|(?:OR)|(?:AND)|(?:THEN)|(?:ELSE)|(?:ENDIF))\\b'
      name: 'keyword.control.g-code'
    },
    {
      comment: 'Keywords: Flow control - Loop'
      match: '\\b((?:WHILE)|(?:ENDWHILE)|(?:FOR)|(?:TO)|(?:bENDFOR))\\b'
      name: 'keyword.control.g-code'
    },
    {
      comment: 'Keywords: Flow control - Switch'
      match: '\\b((?:SWITCH)|(?:CASE)|(?:ENDSWITCH)|(?:BREAK)|(?:DEFAULT))\\b'
      name: 'keyword.control.g-code'
    },
    {
      comment: 'Keywords: Functions'
      match: '\\b((?:INPUT)|(?:PRINT)|(?:PARA)|(?:DEF)|(?:NDEF)|(?:INT))\\b'
      name: 'keyword.control.g-code'
    },
]
