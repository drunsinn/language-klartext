scopeName : 'source.g-code.generic'
name: 'G-Code - Generic'
fileTypes: [
  'i', # generic nc program
  'nc', # generic nc program
  'gcode',
  'ngc',
]

firstLineMatch: '^[^%]'

patterns: [
  {
    comment: 'line number'
    match: '^N\\s*\\d+'
    name: 'comment.line.g-code'
  },
  {
    comment: 'comment'
    match: '(\\(.*\\))$'
    name: 'comment.line.g-code'
  },
  {
    comment: 'comment'
    match: '^(;.*)$'
    name: 'comment.line.g-code'
  },
  {
    comment: 'G-Command'
    match: '\\b(G)(\\d+)\\b'
    captures:
      1:
        name: 'keyword.control.g-code'
      2:
        name: 'constant.numeric.g-code'
  },
  {
    comment: 'Machine Function'
    match: '\\b(M)(\\d+)\\b'
    captures:
      1:
        name: 'keyword.control.g-code'
      2:
        name: 'constant.numeric.g-code'
  },
  {
    comment: 'Tool call'
    match: '\\b(T)(\\d+)\\b'
    captures:
      1:
        name: 'keyword.control.g-code'
      2:
        name: 'constant.numeric.g-code'
  },
  {
    comment: 'axis values'
    match: '\\b([ABCIJKXYZ])([\\+-]?\\d+(?:\\.\\d+)?)\\b'
    captures:
      1:
        name: 'keyword.operator.g-code'
      2:
        name: 'constant.numeric.g-code'
  },
  {
    comment: 'Spindle speed'
    match: '\\b(S)(\\d+)\\b'
    captures:
      1:
        name: 'keyword.operator.g-code'
      2:
        name: 'constant.numeric.g-code'
  },
  {
    comment: 'feed rate'
    match: '\\b(F)(\\d+(?:\\.\\d+)?)\\b'
    captures:
      1:
        name: 'keyword.operator.g-code'
      2:
        name: 'constant.numeric.g-code'
  },
]
